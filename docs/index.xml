<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Robert&#39;s rather humble homepage</title>
    <link>http://salticus.github.io/</link>
    <description>Recent content on Robert&#39;s rather humble homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://salticus.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://salticus.github.io/blog/learning-to-program.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://salticus.github.io/blog/learning-to-program.html</guid>
      <description>Learning to Program For general purpose programming there are a lot of good resources online.
Some programming languages and resources to check out:
 Scratch is a fun, graphical language aimed at school kids. Creating animations and sounds is easy, and kids (and adults) learn a lot. Python is a great general purpose language. (I use it every day.) C is an imperative language that is old, but still used everywhere.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://salticus.github.io/links/git.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://salticus.github.io/links/git.html</guid>
      <description> Resources for understanding git Visual Demonstrations  http://marklodato.github.io/visual-git-guide/index-en.html http://ndpsoftware.com/git-cheatsheet.html http://justinhileman.info/article/git-pretty/git-pretty.png http://www.patrickzahnd.ch/wp-content/uploads/2014/02/git-transport-v1.pdf  Crash Courses  http://gitimmersion.com/ Great for beginners. http://jk.gs/gitglossary.html Great if you want the internals.  Good References  https://git.github.io/git-reference/basic/ http://git-scm.com/doc http://git.kernel.org/cgit/git/git-htmldocs.git/plain/user-manual.html From the creators of git.  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://salticus.github.io/links/learning_strategies.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://salticus.github.io/links/learning_strategies.html</guid>
      <description> Resources for Learning Strategies Asking Questions  Short Self Contained Compilable Example (While this is addressed at Java audience. The principle applies to programming questions in general.) Asking Questions the Smart Way is a classic article that has been kept up to date.  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://salticus.github.io/talks/2015-11-19_python-utah-north_a-quick-taste-of-pytest/presentation.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://salticus.github.io/talks/2015-11-19_python-utah-north_a-quick-taste-of-pytest/presentation.html</guid>
      <description>A quick taste of pytest  @import url(https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz); @import url(https://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic); @import url(https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700,400italic); body { font-family: &#39;Droid Serif&#39;; } h1, h2, h3 { font-family: &#39;Yanone Kaffeesatz&#39;; font-weight: normal; } .remark-code, .remark-inline-code { font-family: &#39;Ubuntu Mono&#39;; }    class: center, middle # Testing in Python It is more fun to write tests on a weekday than it is to look for bugs during the weekend. -Jacob Kaplan Moss --- # Overview ## Thinking about programs in different ways ## Pytest ## Where to learn more --- ## Thinking about programs in different ways.</description>
    </item>
    
  </channel>
</rss>